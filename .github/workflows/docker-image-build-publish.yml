name: Docker Build & Publish

on:
  workflow_call:
    inputs:
      dockerfile:
          type: string
          default: ./Dockerfile
          description: Path to Dockerfile
      context:
          type: string
          default: .
          description: Path to context
      image_names:
          type: string
          required: true
          description: Space separated list of image names.
      tags:
          type: string
          required: true
          description: space-separated list of additional image tags.
      push_dockerhub:
          type: boolean
          required: false
          default: false
          description: Whether to push the image to Dockerhub.
      push_ghcr:
          type: boolean
          required: false
          default: false
          description: Whether to push the image to GHCR.
      build_args:
          type: string
          required: false
          default: ""
          description: space-separated list of build args.
      platforms:
          type: string
          required: true
          description: comma-separated list of platforms.

    secrets:
      DOCKER_USERNAME:
        required: true
      DOCKER_PASSWORD:
        required: true

jobs:
  docker-image-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      # id-token: write # For cosign
      packages: write # For GHCR

    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Build newline separated args
        id: newlined-input
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            core.setOutput('tags', `${{ inputs.tags }}`.split(" ").join("\n"))
            core.setOutput('image_names', `${{ inputs.image_names }}`.split(" ").join("\n"))
            core.setOutput('build_args', `${{ inputs.build_args }}`.split(" ").join("\n"))

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@31cebacef4805868f9ce9a0cb03ee36c32df2ac4 # v5.3.0
        with:
          images: ${{ steps.newlined-input.outputs.image_names }}
          tags: ${{ steps.newlined-input.outputs.tags }} 

      - name: Set up QEMU
        uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3 # v3.0.0
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      - name: Cache Docker layers
        uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84 # v3.3.2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        if: inputs.push_dockerhub
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to GitHub Container Registry
        if: inputs.push_ghcr
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@4a13e500e55cf31b7a5d59a38ab2040ab0f42f56 # v5.1.0
        with:
          file: ${{ inputs.dockerfile }}
          context: ${{ inputs.context }}
          builder: ${{ steps.buildx.outputs.name }}
          platforms: ${{ inputs.platforms }}
          push: ${{ inputs.push_dockerhub || inputs.push_ghcr }}
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          build-args: ${{ steps.newlined-input.outputs.build_args }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
