# docker-publish.yml

name: Docker Build & Publish

on:
  workflow_call:
    inputs:
      image:
          type: string
          required: true
          description: Space separated list of image names.
      tags:
          type: string
          required: true
          description: space-separated list of additional image tags.
      push:
          type: boolean
          required: false
          default: false
          description: Whether to push the image.
      build_args:
          type: string
          required: false
          default: ""
          description: space-separated list of build args.
      platforms:
          type: string
          required: true
          description: comma-separated list of platforms.

    secrets:
      GITHUB_TOKEN:
        required: true
      DOCKER_USERNAME:
        required: true
      DOCKER_PASSWORD:
        required: true
      

jobs:
  docker-image-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write # For cosign
      packages: write # For GHCR

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Build newline separated args
        id: newlined-input
        uses: actions/github-script@v6
        with:
          script: |
            core.setOutput('tags', `${{ inputs.tags }}`.split(",").join("\n"))
            core.setOutput('images', `${{ inputs.image }}`.split(",").join("\n"))
            core.setOutput('build_args', `${{ inputs.build_args }}`.split(",").join("\n"))

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.newlined-input.outputs.images }}
          tags: ${{ steps.newlined-input.outputs.tags }} 

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        if: inputs.push
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to GitHub Container Registry
        if: inputs.push
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          builder: ${{ steps.buildx.outputs.name }}
          platforms: ${{ inputs.platforms }}
          push: ${{ inputs.push }}
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          build-args: ${{ steps.newlined-input.outputs.build_args }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
